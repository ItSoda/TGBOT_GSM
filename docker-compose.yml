version: '2'

services:
  mysql:
    image: mysql:latest
    container_name: mysql-tgbot-avito
    restart: always
    environment:
      - MYSQL_DATABASE=tgbot_avito
      - MYSQL_ROOT_PASSWORD=pass_prod
    volumes:
      - mysql_data:/var/lib/mysql/

  api:
    build: .
    image: itsoda14/tgbot_avito:latest
    command:
      - sh
      - -c
      - |
        dockerize -wait tcp://mysql:3306 -timeout 300s &&
        poetry run python manage.py collectstatic --noinput &&
        poetry run python manage.py migrate &&
        poetry run gunicorn tgbot_avito.wsgi:application -b :8000
    env_file:
      - docker-compose.env
    environment:
      - DOCKER_CONTAINER=True
    ports:
      - "8000:8000" 
    depends_on:
      - mysql
    volumes:
      - .:/itsoda
      - static_volume:/itsoda/static
      - media_volume:/itsoda/media
    container_name: tgbot_avito

  nginx:
    build: 
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: nginx_tgbot_avito
    image: nginx_tgbot_avito
    volumes:
      - static_volume:/itsoda/static
      - media_volume:/itsoda/media
    depends_on:
      - api
    ports:
      - "80:80"


volumes:
  mysql_data: null
  static_volume:
  media_volume: